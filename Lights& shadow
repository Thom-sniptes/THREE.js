/**
 * Lights
 */
const ambientLight = new THREE.AmbientLight(0xffffff, 0.5)

scene.add(ambientLight)

//const pointLight = new THREE.PointLight(0xffffff, 0.5)
////pointLight.position.x = 2
////pointLight.position.y = 3
////pointLight.position.z = 4
//pointLight.position.set (0,5,0)
//pointLight.shadow=true
//scene.add(pointLight)



const rectAreaLight =  new THREE.SpotLight(0x78ff00, 0.5, 10, Math.P
rectAreaLight.position.set(4, 1, 0)

// Lokk At Funktion
rectAreaLight.lookAt(new THREE.Vector3())
const helper = new THREE.SpotLightHelper( rectAreaLight, 2 );


scene.add(rectAreaLight, helper)


///////////////////////Shadow

///renderer after sizes
renderer.shadowMap.enabled=true



/////directional Ligth
const directionalLight = new THREE.DirectionalLight(0xffffff, 0.5)
directionalLight.position.set(2, 2, - 1)
gui.add(directionalLight, 'intensity').min(0).max(1).step(0.001)
gui.add(directionalLight.position, 'x').min(- 5).max(5).step(0.001)
gui.add(directionalLight.position, 'y').min(- 5).max(5).step(0.001)
gui.add(directionalLight.position, 'z').min(- 5).max(5).step(0.001)
directionalLight.castShadow = true
directionalLight.shadow.mapSize.width = 1024
directionalLight.shadow.mapSize.height = 1024
directionalLight.shadow.radius = 10
directionalLight.shadow.camera.near = 3
directionalLight.shadow.camera.far = 8
const directionalLightHelper = new THREE.CameraHelper(directionalLight.shadow.camera)

scene.add(directionalLight, directionalLightHelper)
